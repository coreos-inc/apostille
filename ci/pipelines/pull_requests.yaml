resource_types:
  - name: pull-request
    type: docker-image
    source:
      repository: quay.io/quay/pr-resource
      username: {{quay-robot-username}}
      password: {{quay-robot-password}}

resources:
  - name: build-image
    type: docker-image
    source:
      repository: quay.io/quay/apostille-build-image
      username: {{quay-robot-username}}
      password: {{quay-robot-password}}
  - name: apostille-pull-request
    type: pull-request
    source:
      access_token: {{quay-github-token}}
      private_key: {{quay-git-private-key}}
      repo: coreos-inc/apostille
      uri: git@github.com:coreos-inc/apostille.git
      base: master
      disable_forks: true

jobs:
  - name: unit
    max_in_flight: 4
    plan:
      - get: apostille-pull-request
        trigger: true
        version: every
      - put: apostille-pull-request
        params:
          path: apostille-pull-request
          context: unit
          status: pending
        version: every
      - task: tag
        config:
          image_resource:
            type: docker-image
            source:
              repository: quay.io/quay/apostille-build-util
          platform: linux
          outputs:
            - name: tag
          inputs:
            - name: apostille-pull-request
          run:
            path: sh
            args: ["-c", "cd apostille-pull-request && \
                          echo unit-$(git rev-parse --short --verify HEAD) > ../tag/name"]
      - put: build-image
        params: {build: apostille-pull-request, tag: tag/name}
      - get: build-image
      - task: unit
        image: build-image
        file: apostille-pull-request/ci/tasks/unit.yaml
        on_success:
          put: apostille-pull-request
          params:
            path: apostille-pull-request
            context: unit
            status: success
        on_failure:
          put: apostille-pull-request
          params:
            path: apostille-pull-request
            context: unit
            status: failure

  - name: postgres
    max_in_flight: 4
    plan:
      - get: apostille-pull-request
        trigger: true
        version: every
      - put: apostille-pull-request
        params:
          path: apostille-pull-request
          context: postgres
          status: pending
      - task: tag
        config:
          image_resource:
            type: docker-image
            source:
              repository: quay.io/quay/apostille-build-util
          platform: linux
          outputs:
            - name: tag
          inputs:
            - name: apostille-pull-request
          run:
            path: sh
            args: ["-c", "cd apostille-pull-request && \
                          echo postgres-$(git rev-parse --short --verify HEAD) > ../tag/name"]
      - put: build-image
        params: {build: apostille-pull-request, tag: tag/name}
      - get: build-image
        params: {tag: tag/name}
      - task: postgres
        privileged: true
        image: build-image
        file: apostille-pull-request/ci/tasks/postgres.yaml
        on_success:
          put: apostille-pull-request
          params:
            path: apostille-pull-request
            context: postgres
            status: success
        on_failure:
          put: apostille-pull-request
          params:
            path: apostille-pull-request
            context: postgres
            status: failure
  - name: mysql
    max_in_flight: 4
    plan:
      - get: apostille-pull-request
        trigger: true
        version: every
      - put: apostille-pull-request
        params:
          path: apostille-pull-request
          context: mysql
          status: pending
      - task: tag
        config:
          image_resource:
            type: docker-image
            source:
              repository: quay.io/quay/apostille-build-util
          platform: linux
          outputs:
            - name: tag
          inputs:
            - name: apostille-pull-request
          run:
            path: sh
            args: ["-c", "cd apostille-pull-request && \
                          echo mysql-$(git rev-parse --short --verify HEAD) > ../tag/name"]
      - put: build-image
        params: {build: apostille-pull-request, tag: tag/name}
      - get: build-image
        params: {tag: tag/name}
      - task: mysql
        privileged: true
        image: build-image
        file: apostille-pull-request/ci/tasks/mysql.yaml
        on_success:
          put: apostille-pull-request
          params:
            path: apostille-pull-request
            context: mysql
            status: success
        on_failure:
          put: apostille-pull-request
          params:
            path: apostille-pull-request
            context: mysql
            status: failure

